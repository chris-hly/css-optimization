{"version":3,"sources":["containing/index.js","specificity/index.js","gridLayout/index.js","shorthand/index.js","flexible/index.js","language/index.js","animation/index.js","value/index.js","media/index.js","cascade/index.js","App.js","serviceWorker.js","index.js"],"names":["Containing","className","Component","Specificity","type","id","GridLayout","class","Shorthand","Flexible","style","lineHeight","Language","Animation","Value","Media","props","handleOnchange","e","setState","width","target","value","state","this","display","flexDirection","onChange","height","srcDoc","Box","Content","Layout","Footer","Sider","App","cssList","name","component","key","useState","currentComponent","setCurrentComponent","list","minHeight","theme","defaultSelectedKeys","mode","map","item","Item","onClick","margin","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68f09600.chunk.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport './index.scss'\nclass Containing extends Component {\n  render () {\n    return (\n      <section className='containing'>\n        <div className='containing-body'>\n          <p className='containing-content'>\n            containing\n          </p>\n        </div>\n      </section>\n    )\n  }\n}\n\nContaining.propTypes = {\n\n}\n\nexport default Containing\n","import React, { Component, PropTypes } from 'react'\nimport './index.scss'\nclass Specificity extends Component {\n  render () {\n    return (\n      <p type='chris' className='specificity' id='specificity'>\n        <span>Specificity</span>\n      </p>\n    )\n  }\n}\n\nSpecificity.propTypes = {\n\n}\n\nexport default Specificity\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './index.scss'\n\nclass GridLayout extends Component {\n  render () {\n    return (\n      <div class='wrapper'>\n        <div class='one'>One</div>\n        <div class='two'>Two</div>\n        <div class='three'>Three</div>\n        <div class='four'>Four</div>\n        <div class='five'>Five</div>\n        <div class='six'>Six</div>\n      </div>\n    )\n  }\n}\n\nGridLayout.propTypes = {\n\n}\n\nexport default GridLayout\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Shorthand extends Component {\n  render () {\n    return (\n      <div>\n                Shorthand\n      </div>\n    )\n  }\n}\n\nShorthand.propTypes = {\n\n}\n\nexport default Shorthand\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './index.scss'\nclass Flexible extends Component {\n  render() {\n    return (\n      <article className=\"flex\">\n        {/* {\n          [1, 2, 3, 4, 5, 6, 7].map(item => <div key={item} className={`flex-child ${'flex-child-' + item}`}>\n            {\n              [1, 2, 3, 4, 5, 6, 7, 8, 9].map(item => item + '你啊')\n            }\n\n          </div>)\n        } */}\n        <div style={{ lineHeight: '40px'}}>\n          div1\n        </div>\n        <div>\n          div2\n        </div>\n      </article>\n    )\n  }\n}\n\nFlexible.propTypes = {\n\n}\n\nexport default Flexible\n","import React, { Component } from 'react'\nimport './index.scss'\n\nclass Language extends Component {\n  render () {\n    return (\n      <aeticle className='language'>\n        <h2>Language</h2>\n        <section>\n             content\n        </section>\n      </aeticle>\n    )\n  }\n}\n\nexport default Language\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Animation extends Component {\n  render () {\n    return (\n      <div>\n                Animation\n      </div>\n    )\n  }\n}\n\nAnimation.propTypes = {\n\n}\n\nexport default Animation\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Value extends Component {\n  render () {\n    return (\n      <div />\n    )\n  }\n}\n\nValue.propTypes = {\n\n}\n\nexport default Value\n","import React, { Component, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './index.scss'\n\nclass Media extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 50\n\n    }\n  }\n\n  handleOnchange = (e) => {\n    this.setState({ width: e.target.value })\n  }\n  render() {\n    const { width } = this.state;\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <input type=\"range\" value={width} style={{ width: '100px' }} onChange={this.handleOnchange} />\n        <iframe\n          width={width}\n          height=\"50\"\n          srcDoc={`<style>  \n           @media screen and (min-aspect-ratio: 8/5) {\n            body {\n                background-color: red\n             }\n           }\n\n           @media screen and (max-aspect-ratio: 3/2) {\n              body {\n                 background-color: yellow\n              }\n            }\n\n            @media screen and (aspect-ratio: 1/1) {\n              body {\n                  background-color: black\n               }\n            }\n         </style> \n          <div className=\"chris\"> hello</div>`}\n        />\n      </div>\n    )\n  }\n}\n\nMedia.propTypes = {\n\n}\n\nexport default Media\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './index.scss'\n\nclass Box extends Component {\n  render () {\n    return (\n      <div className='box'>\n        <div id='div1'>\n          <h1>Division Element #1</h1>\n          <code>position: relative;<br />\n            z-index: 5;\n          </code>\n        </div>\n\n        <div id='div2'>\n          <h1>Division Element #2</h1>\n          <code>position: relative;<br />\n            z-index: 2;\n          </code>\n        </div>\n\n        <div id='div3'>\n          <div id='div4'>\n            <h1>Division Element #4</h1>\n            <code>position: relative;<br />\n              z-index: 6;\n            </code>\n          </div>\n\n          <h1>Division Element #3</h1>\n          <code>position: absolute;<br />\n            z-index: 4;\n          </code>\n\n          <div id='div5'>\n            <h1>Division Element #5</h1>\n            <code>position: relative;<br />\n              z-index: 1;\n            </code>\n          </div>\n\n          <div id='div6'>\n            <h1>Division Element #6</h1>\n            <code>position: absolute;<br />\n              z-index: 3;\n            </code>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nBox.propTypes = {\n\n}\n\nexport default Box\n","import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd'\nimport ContainingBlock from './containing'\nimport Specificity from './specificity'\nimport GridLayout from './gridLayout'\nimport Shorthand from './shorthand'\nimport Flexible from './flexible'\nimport Language from './language'\nimport Animation from './animation'\nimport Value from './value'\nimport Media from './media'\nimport Cascade from './cascade'\nimport 'antd/dist/antd.css'\nimport './App.scss'\n\nconst { Content, Footer, Sider } = Layout\n\nfunction App () {\n  const cssList = [{\n    name: '语法',\n    component: <Language />,\n    key: '1'\n  }, {\n    name: '特殊性',\n    component: <Specificity />,\n    key: '2'\n  },\n  {\n    name: '层叠',\n    component: <Cascade />,\n    key: '3'\n  },\n  {\n    name: '包含块',\n    component: <ContainingBlock />,\n    key: '4'\n  },\n  {\n    name: '值计算',\n    component: <Value />,\n    key: '5'\n  },\n  {\n    name: '简写属性',\n    component: <Shorthand />,\n    key: '6'\n  },\n  {\n    name: '弹性盒子',\n    component: <Flexible />,\n    key: '7'\n  },\n  {\n    name: '网格布局',\n    component: <GridLayout />,\n    key: '8'\n  },\n  {\n    name: '媒体查询',\n    component: <Media />,\n    key: '9'\n  },\n  {\n    name: '动画',\n    component: <Animation />,\n    key: '10'\n  }]\n  const [currentComponent, setCurrentComponent] = useState(<Language />)\n  const [list, setList] = useState(cssList)\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider>\n        <div className='logo' />\n        <Menu theme='dark' defaultSelectedKeys={['1']} mode='inline'>\n          {\n            list.map(item =>\n              <Menu.Item key={item.key} onClick={() => setCurrentComponent(item.component)}>\n                <span>{item.name}</span>\n              </Menu.Item>)\n          }\n        </Menu>\n      </Sider>\n      <Layout className='site-layout'>\n        <Content style={{ margin: '0 16px' }}>\n          {currentComponent}\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}